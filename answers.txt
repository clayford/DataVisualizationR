Answers

# YOUR TURN #1 ------------------------------------------------------------

# (1) Create a histogram of totalvalue, the total value of the home. 
# Set bins = 100.
ggplot(homes, aes(x = totalvalue)) +
  geom_histogram(bins = 100)

# (2) repeat #1 but now also facet by hsdistrict
ggplot(homes, aes(x = totalvalue)) +
  geom_histogram(bins = 100) + 
  facet_wrap(~hsdistrict)

# (3) repeat #3 but now also zoom in on x-axis from $0 to $1,000,000
ggplot(homes, aes(x = totalvalue)) +
  geom_histogram(bins = 100) + 
  facet_wrap(~hsdistrict) +
  coord_cartesian(xlim = c(0,1e6))

# (4) save (3) and investigate with ggplotly()
p <- ggplot(homes, aes(x = totalvalue)) +
  geom_histogram(bins = 100) + 
  facet_wrap(~hsdistrict) +
  coord_cartesian(xlim = c(0,1e6))
ggplotly(p)



# YOUR TURN #2 ------------------------------------------------------------

# (1) Create a barplot of counts for middle school district. 
ggplot(homes, aes(x = msdistrict)) + geom_bar()


# (2) Create a stacked proportional bar chart (ie, set position = "fill") for
# msdistrict using cooling (No Central Air vs. Central Air) as the fill
# variable: fill = factor(cooling)
ggplot(homes, aes(x = msdistrict, fill = factor(cooling))) + 
  geom_bar(position = "fill")


# (3) The following code attempts to show a proportional bar plot of number of
# bedrooms (1-5) by msdistrict, but it doesn't work. Can you fix it?

ggplot(filter(homes, bedroom %in% 1:5), 
       aes(x=msdistrict, fill = factor(bedroom))) + 
  geom_bar(position = fill) +
  scale_fill_discrete("Bedrooms")
  
# Answer: set position = "fill" (add quotes)

# YOUR TURN #3 ------------------------------------------------------------

# (1) Plot age vs. finsqft with geom_point(). Put finsqft on the y axis. 
ggplot(homes, aes(x = age, y = finsqft)) +
  geom_point()


# (2) Repeat 1 but now also zoom in on the x and y axis. Look at the last 100
# years for houses with less than 5000 finsqft. Also, set shape = 1.
ggplot(homes, aes(x = age, y = finsqft)) +
  geom_point(shape = 1) +
  coord_cartesian(xlim = c(0,100), ylim = c(0,5000))
  
  
# YOUR TURN #4 ------------------------------------------------------------

# Create a scatterplot of totalvalue vs lotsize, with totalvalue on y axis. 
# - add a smooth
# - zoom in on plot: x-axis (0, 10) y-axis (0, 1e6)
# - Fix the y-axis to show the amount in dollars. 

ggplot(homes, aes(x = lotsize, y = totalvalue)) + 
  geom_point() +
  geom_smooth() +
  coord_cartesian(xlim = c(0,10), ylim = c(0, 1e6)) +
  scale_y_continuous(labels = dollar)
  


# YOUR TURN #5 ------------------------------------------------------------


# (1) Make a boxplot totalvalue by msdistrict. 
ggplot(homes, aes(x = msdistrict, y = totalvalue)) +
  geom_boxplot()


# (2) Make a stripchart of totalvalue by totalvalue.
# - in geom_jitter() set width = 0.4 and alpha = 1/5
# - format y axis as dollar 
# - zoom in on y axis: 0 - $1,000,000

ggplot(homes, aes(x = msdistrict, y = totalvalue)) +
  geom_jitter(width = 0.4, alpha = 1/5) +
  scale_y_continuous(labels = dollar) +
  coord_cartesian(ylim = c(0,1e6))
  
  
  